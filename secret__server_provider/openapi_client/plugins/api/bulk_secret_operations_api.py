"""
    Secret Server Rest API

    REST API documentation for Secret Server. This document describes how to use the REST API. All requests require an authentication token; please see the <a href=\"../OAuth/\">authentication document</a> for more information. The <a href=\"swagger.json\">Swagger specification</a> for this API is also available.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->  # noqa: E501

    The version of the OpenAPI document: 11.2.2
    Contact: info@authomize.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from plugins.api_client import ApiClient, Endpoint as _Endpoint
from plugins.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from plugins.model.activate_secrets_args import ActivateSecretsArgs
from plugins.model.add_share_permission_args import AddSharePermissionArgs
from plugins.model.assign_secrets_to_jumpbox_route_args import AssignSecretsToJumpboxRouteArgs
from plugins.model.assign_secrets_to_secret_policy_args import AssignSecretsToSecretPolicyArgs
from plugins.model.assign_secrets_to_site_args import AssignSecretsToSiteArgs
from plugins.model.authentication_failed_response import AuthenticationFailedResponse
from plugins.model.bad_request_response import BadRequestResponse
from plugins.model.bulk_operation_response_message import BulkOperationResponseMessage
from plugins.model.change_secrets_passwords_remotely_args import ChangeSecretsPasswordsRemotelyArgs
from plugins.model.change_security_options_secrets_args import ChangeSecurityOptionsSecretsArgs
from plugins.model.convert_secrets_secret_type_args import ConvertSecretsSecretTypeArgs
from plugins.model.deactivate_secrets_args import DeactivateSecretsArgs
from plugins.model.delete_dependencies_args import DeleteDependenciesArgs
from plugins.model.disable_auto_change_secrets_args import DisableAutoChangeSecretsArgs
from plugins.model.disable_checkout_secrets_args import DisableCheckoutSecretsArgs
from plugins.model.disable_dependencies_args import DisableDependenciesArgs
from plugins.model.disable_heartbeat_secrets_args import DisableHeartbeatSecretsArgs
from plugins.model.disable_hide_launcher_password_for_secrets_args import DisableHideLauncherPasswordForSecretsArgs
from plugins.model.disable_require_view_comment_secrets_args import DisableRequireViewCommentSecretsArgs
from plugins.model.edit_share_permissions_secrets_args import EditSharePermissionsSecretsArgs
from plugins.model.enable_auto_change_secrets_args import EnableAutoChangeSecretsArgs
from plugins.model.enable_checkout_secrets_args import EnableCheckoutSecretsArgs
from plugins.model.enable_dependencies_args import EnableDependenciesArgs
from plugins.model.enable_heartbeat_secrets_args import EnableHeartbeatSecretsArgs
from plugins.model.enable_hide_launcher_password_secrets_args import EnableHideLauncherPasswordSecretsArgs
from plugins.model.enable_inherit_permissions_secrets_args import EnableInheritPermissionsSecretsArgs
from plugins.model.enable_require_view_comment_secrets_args import EnableRequireViewCommentSecretsArgs
from plugins.model.internal_server_error_response import InternalServerErrorResponse
from plugins.model.move_secrets_to_folder_args import MoveSecretsToFolderArgs
from plugins.model.request_erase_secrets_args import RequestEraseSecretsArgs
from plugins.model.run_heartbeat_for_secrets_args import RunHeartbeatForSecretsArgs
from plugins.model.set_dependency_password_args import SetDependencyPasswordArgs
from plugins.model.set_privileged_account_for_secrets_args import SetPrivilegedAccountForSecretsArgs
from plugins.model.update_associated_secrets_args import UpdateAssociatedSecretsArgs


class BulkSecretOperationsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.bulk_secret_operations_service_activate_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/activate',
                'operation_id': 'bulk_secret_operations_service_activate_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'activate_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'activate_secrets_args':
                        (ActivateSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'activate_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_add_share_permissions_to_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/add-share',
                'operation_id': 'bulk_secret_operations_service_add_share_permissions_to_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'add_share_permission_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'add_share_permission_args':
                        (AddSharePermissionArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'add_share_permission_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_assign_secrets_to_jumpbox_route_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/assign-jumpbox-route',
                'operation_id': 'bulk_secret_operations_service_assign_secrets_to_jumpbox_route',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'assign_secrets_to_jumpbox_route_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'assign_secrets_to_jumpbox_route_args':
                        (AssignSecretsToJumpboxRouteArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'assign_secrets_to_jumpbox_route_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_assign_secrets_to_secret_policy_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/assign-secret-policy',
                'operation_id': 'bulk_secret_operations_service_assign_secrets_to_secret_policy',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'assign_secrets_to_secret_policy_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'assign_secrets_to_secret_policy_args':
                        (AssignSecretsToSecretPolicyArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'assign_secrets_to_secret_policy_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_assign_secrets_to_site_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/assign-site',
                'operation_id': 'bulk_secret_operations_service_assign_secrets_to_site',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'assign_secrets_to_site_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'assign_secrets_to_site_args':
                        (AssignSecretsToSiteArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'assign_secrets_to_site_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_change_secrets_passwords_remotely_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/change-password-remotely',
                'operation_id': 'bulk_secret_operations_service_change_secrets_passwords_remotely',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'change_secrets_passwords_remotely_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'change_secrets_passwords_remotely_args':
                        (ChangeSecretsPasswordsRemotelyArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'change_secrets_passwords_remotely_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_change_security_options_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/change-security-options',
                'operation_id': 'bulk_secret_operations_service_change_security_options_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'change_security_options_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'change_security_options_secrets_args':
                        (ChangeSecurityOptionsSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'change_security_options_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_convert_secrets_to_secret_type_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/convert-type',
                'operation_id': 'bulk_secret_operations_service_convert_secrets_to_secret_type',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'convert_secrets_secret_type_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'convert_secrets_secret_type_args':
                        (ConvertSecretsSecretTypeArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'convert_secrets_secret_type_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_deactivate_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/deactivate',
                'operation_id': 'bulk_secret_operations_service_deactivate_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'deactivate_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'deactivate_secrets_args':
                        (DeactivateSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'deactivate_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_delete_dependencies_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/delete-dependencies',
                'operation_id': 'bulk_secret_operations_service_delete_dependencies',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'delete_dependencies_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'delete_dependencies_args':
                        (DeleteDependenciesArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'delete_dependencies_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_disable_auto_change_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/disable-autochange',
                'operation_id': 'bulk_secret_operations_service_disable_auto_change_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'disable_auto_change_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'disable_auto_change_secrets_args':
                        (DisableAutoChangeSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'disable_auto_change_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_disable_checkout_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/disable-checkout',
                'operation_id': 'bulk_secret_operations_service_disable_checkout_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'disable_checkout_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'disable_checkout_secrets_args':
                        (DisableCheckoutSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'disable_checkout_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_disable_dependencies_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/disable-dependencies',
                'operation_id': 'bulk_secret_operations_service_disable_dependencies',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'disable_dependencies_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'disable_dependencies_args':
                        (DisableDependenciesArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'disable_dependencies_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_disable_heartbeat_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/disable-heartbeat',
                'operation_id': 'bulk_secret_operations_service_disable_heartbeat_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'disable_heartbeat_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'disable_heartbeat_secrets_args':
                        (DisableHeartbeatSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'disable_heartbeat_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_disable_hide_launcher_password_for_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/disable-hide-launcher-password',
                'operation_id': 'bulk_secret_operations_service_disable_hide_launcher_password_for_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'disable_hide_launcher_password_for_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'disable_hide_launcher_password_for_secrets_args':
                        (DisableHideLauncherPasswordForSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'disable_hide_launcher_password_for_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_disable_require_view_comment_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/disable-require-view-comment',
                'operation_id': 'bulk_secret_operations_service_disable_require_view_comment_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'disable_require_view_comment_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'disable_require_view_comment_secrets_args':
                        (DisableRequireViewCommentSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'disable_require_view_comment_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_edit_share_permissions_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/edit-share',
                'operation_id': 'bulk_secret_operations_service_edit_share_permissions_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'edit_share_permissions_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'edit_share_permissions_secrets_args':
                        (EditSharePermissionsSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'edit_share_permissions_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_enable_auto_change_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/enable-autochange',
                'operation_id': 'bulk_secret_operations_service_enable_auto_change_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'enable_auto_change_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'enable_auto_change_secrets_args':
                        (EnableAutoChangeSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'enable_auto_change_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_enable_checkout_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/enable-checkout',
                'operation_id': 'bulk_secret_operations_service_enable_checkout_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'enable_checkout_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'enable_checkout_secrets_args':
                        (EnableCheckoutSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'enable_checkout_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_enable_dependencies_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/enable-dependencies',
                'operation_id': 'bulk_secret_operations_service_enable_dependencies',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'enable_dependencies_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'enable_dependencies_args':
                        (EnableDependenciesArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'enable_dependencies_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_enable_heartbeat_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/enable-heartbeat',
                'operation_id': 'bulk_secret_operations_service_enable_heartbeat_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'enable_heartbeat_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'enable_heartbeat_secrets_args':
                        (EnableHeartbeatSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'enable_heartbeat_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_enable_hide_launcher_password_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/enable-hide-launcher-password',
                'operation_id': 'bulk_secret_operations_service_enable_hide_launcher_password_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'enable_hide_launcher_password_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'enable_hide_launcher_password_secrets_args':
                        (EnableHideLauncherPasswordSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'enable_hide_launcher_password_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_enable_inherit_permissions_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/enable-inherit-permissions',
                'operation_id': 'bulk_secret_operations_service_enable_inherit_permissions_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'enable_inherit_permissions_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'enable_inherit_permissions_secrets_args':
                        (EnableInheritPermissionsSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'enable_inherit_permissions_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_enable_require_view_comment_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/enable-require-view-comment',
                'operation_id': 'bulk_secret_operations_service_enable_require_view_comment_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'enable_require_view_comment_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'enable_require_view_comment_secrets_args':
                        (EnableRequireViewCommentSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'enable_require_view_comment_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_move_secrets_to_folder_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/move-to-folder',
                'operation_id': 'bulk_secret_operations_service_move_secrets_to_folder',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'move_secrets_to_folder_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'move_secrets_to_folder_args':
                        (MoveSecretsToFolderArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'move_secrets_to_folder_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_request_erase_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/request-erase',
                'operation_id': 'bulk_secret_operations_service_request_erase_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'request_erase_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'request_erase_secrets_args':
                        (RequestEraseSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'request_erase_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_run_heartbeat_for_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/run-heartbeat',
                'operation_id': 'bulk_secret_operations_service_run_heartbeat_for_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'run_heartbeat_for_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'run_heartbeat_for_secrets_args':
                        (RunHeartbeatForSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'run_heartbeat_for_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_set_dependencies_password_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/set-dependencies-password',
                'operation_id': 'bulk_secret_operations_service_set_dependencies_password',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'set_dependency_password_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'set_dependency_password_args':
                        (SetDependencyPasswordArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'set_dependency_password_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_set_privileged_account_for_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/set-privileged-account',
                'operation_id': 'bulk_secret_operations_service_set_privileged_account_for_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'set_privileged_account_for_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'set_privileged_account_for_secrets_args':
                        (SetPrivilegedAccountForSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'set_privileged_account_for_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )
        self.bulk_secret_operations_service_update_associated_secrets_endpoint = _Endpoint(
            settings={
                'response_type': (BulkOperationResponseMessage,),
                'auth': [
                    'BearerToken'
                ],
                'endpoint_path': '/v1/bulk-secret-operations/update-associated-secrets',
                'operation_id': 'bulk_secret_operations_service_update_associated_secrets',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'update_associated_secrets_args',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'update_associated_secrets_args':
                        (UpdateAssociatedSecretsArgs,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'update_associated_secrets_args': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def bulk_secret_operations_service_activate_secrets(
        self,
        **kwargs
    ):
        """Activate  # noqa: E501

        Activate each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_activate_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            activate_secrets_args (ActivateSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_activate_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_add_share_permissions_to_secrets(
        self,
        **kwargs
    ):
        """Add share  # noqa: E501

        Add share to each Secret with supplied Permissions.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_add_share_permissions_to_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            add_share_permission_args (AddSharePermissionArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_add_share_permissions_to_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_assign_secrets_to_jumpbox_route(
        self,
        **kwargs
    ):
        """Assign Jumpbox Route  # noqa: E501

        Assign each Secret to the supplied Jumpbox route.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_assign_secrets_to_jumpbox_route(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            assign_secrets_to_jumpbox_route_args (AssignSecretsToJumpboxRouteArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_assign_secrets_to_jumpbox_route_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_assign_secrets_to_secret_policy(
        self,
        **kwargs
    ):
        """Assign Secret Policy  # noqa: E501

        Assign each Secret to the supplied Secret Policy.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_assign_secrets_to_secret_policy(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            assign_secrets_to_secret_policy_args (AssignSecretsToSecretPolicyArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_assign_secrets_to_secret_policy_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_assign_secrets_to_site(
        self,
        **kwargs
    ):
        """Assign site  # noqa: E501

        Assign each Secret to the supplied site.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_assign_secrets_to_site(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            assign_secrets_to_site_args (AssignSecretsToSiteArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_assign_secrets_to_site_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_change_secrets_passwords_remotely(
        self,
        **kwargs
    ):
        """Change Password Remotely  # noqa: E501

        Change the password remotely of each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_change_secrets_passwords_remotely(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            change_secrets_passwords_remotely_args (ChangeSecretsPasswordsRemotelyArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_change_secrets_passwords_remotely_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_change_security_options_secrets(
        self,
        **kwargs
    ):
        """Change Security Options  # noqa: E501

        Change Security Options for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_change_security_options_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            change_security_options_secrets_args (ChangeSecurityOptionsSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_change_security_options_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_convert_secrets_to_secret_type(
        self,
        **kwargs
    ):
        """Convert Type  # noqa: E501

        Convert each Secret to the supplied type.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_convert_secrets_to_secret_type(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            convert_secrets_secret_type_args (ConvertSecretsSecretTypeArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_convert_secrets_to_secret_type_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_deactivate_secrets(
        self,
        **kwargs
    ):
        """Deactivate  # noqa: E501

        Deactivate each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_deactivate_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            deactivate_secrets_args (DeactivateSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_deactivate_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_delete_dependencies(
        self,
        **kwargs
    ):
        """Delete Dependencies  # noqa: E501

        Delete Dependencies for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_delete_dependencies(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            delete_dependencies_args (DeleteDependenciesArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_delete_dependencies_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_disable_auto_change_secrets(
        self,
        **kwargs
    ):
        """Disable AutoChange  # noqa: E501

        Disable AutoChange for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_disable_auto_change_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            disable_auto_change_secrets_args (DisableAutoChangeSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_disable_auto_change_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_disable_checkout_secrets(
        self,
        **kwargs
    ):
        """Disable Checkout  # noqa: E501

        Disable Checkout for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_disable_checkout_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            disable_checkout_secrets_args (DisableCheckoutSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_disable_checkout_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_disable_dependencies(
        self,
        **kwargs
    ):
        """Disable Dependencies  # noqa: E501

        Disable Dependencies for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_disable_dependencies(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            disable_dependencies_args (DisableDependenciesArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_disable_dependencies_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_disable_heartbeat_secrets(
        self,
        **kwargs
    ):
        """Disable Heartbeat  # noqa: E501

        Disable Heartbeat for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_disable_heartbeat_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            disable_heartbeat_secrets_args (DisableHeartbeatSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_disable_heartbeat_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_disable_hide_launcher_password_for_secrets(
        self,
        **kwargs
    ):
        """Disable Hide Launcher Password  # noqa: E501

        Disable Hide Launcher Password for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_disable_hide_launcher_password_for_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            disable_hide_launcher_password_for_secrets_args (DisableHideLauncherPasswordForSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_disable_hide_launcher_password_for_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_disable_require_view_comment_secrets(
        self,
        **kwargs
    ):
        """Disable Require View Comment  # noqa: E501

        Disable Require View Comment for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_disable_require_view_comment_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            disable_require_view_comment_secrets_args (DisableRequireViewCommentSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_disable_require_view_comment_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_edit_share_permissions_secrets(
        self,
        **kwargs
    ):
        """Edit Share  # noqa: E501

        Edit each Secret and apply the supplied share Permissions.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_edit_share_permissions_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            edit_share_permissions_secrets_args (EditSharePermissionsSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_edit_share_permissions_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_enable_auto_change_secrets(
        self,
        **kwargs
    ):
        """Enable AutoChange  # noqa: E501

        Enable AutoChange for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_enable_auto_change_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            enable_auto_change_secrets_args (EnableAutoChangeSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_enable_auto_change_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_enable_checkout_secrets(
        self,
        **kwargs
    ):
        """Enable Checkout  # noqa: E501

        Enable Checkout for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_enable_checkout_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            enable_checkout_secrets_args (EnableCheckoutSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_enable_checkout_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_enable_dependencies(
        self,
        **kwargs
    ):
        """Enable Dependencies  # noqa: E501

        Enable Dependencies for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_enable_dependencies(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            enable_dependencies_args (EnableDependenciesArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_enable_dependencies_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_enable_heartbeat_secrets(
        self,
        **kwargs
    ):
        """Enable Heartbeat  # noqa: E501

        Enable Heartbeat for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_enable_heartbeat_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            enable_heartbeat_secrets_args (EnableHeartbeatSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_enable_heartbeat_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_enable_hide_launcher_password_secrets(
        self,
        **kwargs
    ):
        """Enable Hide Launcher Password  # noqa: E501

        Enable Hide Launcher Password for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_enable_hide_launcher_password_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            enable_hide_launcher_password_secrets_args (EnableHideLauncherPasswordSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_enable_hide_launcher_password_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_enable_inherit_permissions_secrets(
        self,
        **kwargs
    ):
        """Enable Inherit Permissions  # noqa: E501

        Enable Inherit Permissions for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_enable_inherit_permissions_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            enable_inherit_permissions_secrets_args (EnableInheritPermissionsSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_enable_inherit_permissions_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_enable_require_view_comment_secrets(
        self,
        **kwargs
    ):
        """Enable Require View Comment  # noqa: E501

        Enable Require View Comment for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_enable_require_view_comment_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            enable_require_view_comment_secrets_args (EnableRequireViewCommentSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_enable_require_view_comment_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_move_secrets_to_folder(
        self,
        **kwargs
    ):
        """Move To Folder  # noqa: E501

        Move selected Secrets to a specified Folder.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_move_secrets_to_folder(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            move_secrets_to_folder_args (MoveSecretsToFolderArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_move_secrets_to_folder_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_request_erase_secrets(
        self,
        **kwargs
    ):
        """Request Erase  # noqa: E501

        Request Erase for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_request_erase_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            request_erase_secrets_args (RequestEraseSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_request_erase_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_run_heartbeat_for_secrets(
        self,
        **kwargs
    ):
        """Run Heartbeat  # noqa: E501

        Run Heartbeat for selected Secrets.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_run_heartbeat_for_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            run_heartbeat_for_secrets_args (RunHeartbeatForSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_run_heartbeat_for_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_set_dependencies_password(
        self,
        **kwargs
    ):
        """Set Dependencies Password  # noqa: E501

        Set Password dependencies for each Secret.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_set_dependencies_password(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            set_dependency_password_args (SetDependencyPasswordArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_set_dependencies_password_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_set_privileged_account_for_secrets(
        self,
        **kwargs
    ):
        """Set Privileged Account  # noqa: E501

        Set a Privileged Account for selected Secrets.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_set_privileged_account_for_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            set_privileged_account_for_secrets_args (SetPrivilegedAccountForSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_set_privileged_account_for_secrets_endpoint.call_with_http_info(**kwargs)

    def bulk_secret_operations_service_update_associated_secrets(
        self,
        **kwargs
    ):
        """Update Associated Secrets  # noqa: E501

        Associate each Secret in a list with every Secret in a second list.  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.bulk_secret_operations_service_update_associated_secrets(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            update_associated_secrets_args (UpdateAssociatedSecretsArgs): args. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            BulkOperationResponseMessage
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        return self.bulk_secret_operations_service_update_associated_secrets_endpoint.call_with_http_info(**kwargs)

